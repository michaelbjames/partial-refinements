{-
Are there and even number of Trues in a list of Bools?
-}

data List a where
	Nil :: List a
	Cons :: x: a -> xs: List a -> List a

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs

not :: p:Bool -> {Bool | _v == !p}
true :: {Bool | _v == True}

{-
Checks and synthesizes
-}
list_even_parity :: xs:List Bool -> { Bool |
   (xs == Nil ==> _v == True) &&
   (xs == (Cons False Nil) ==> _v == True) &&
   (xs == (Cons True Nil) ==> _v == False) &&
   (xs == (Cons False (Cons False Nil)) ==> _v == True) &&
   (xs == (Cons False (Cons True Nil)) ==> _v == False) &&
   (xs == (Cons True (Cons False Nil)) ==> _v == False) &&
   (xs == (Cons True (Cons True Nil)) ==> _v == True) &&
   True
}
list_even_parity = ??