data List a where
	Nil :: List a
	Cons :: x: a -> xs: List a -> List a

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs

data Maybe a where
  Nothing :: Maybe a
  Just :: a -> Maybe a


{-

-}

list_last ::
  (xs:List Int -> Maybe Int) ^
  (xs:{List Int | len _v == 0} -> {Maybe Int | _v == Nothing}) ^
  (xs:{List Int | _v == (Cons 1 Nil)} -> {Maybe Int | _v == Just 1}) ^
  (xs:{List {Int | _v == 1} | len _v > 0} -> {Maybe Int | _v == Just 1})
-- list_last = ??
list_last =  ??