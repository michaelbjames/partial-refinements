qualifier { len _v >= 0}

data List a where
	Nil :: List a
	Cons :: x: a -> xs: List a -> List a

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs


listToFalseGen ::
    (zs:List Int -> Bool) ^
    -- (zs:{List Int | len _v > 0}  -> {Bool | _v == False}) ^
    (zs:{List Int | len _v >= 0} -> {Bool | _v == False})
listToFalseGen = \zs.
    match zs with
        Nil -> False
        Cons y ys -> listToFalseGen ys