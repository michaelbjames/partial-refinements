data List a where
	Nil :: List a
	Cons :: x: a -> xs: List a -> List a

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs

filter :: <p :: a -> Bool> . (
    (
    pred: (x: a -> {Bool | _v == p x}) -> xs: List a -> List {a | p _v}
    ) ^
    (
    pred: (x: a -> {Bool | _v == p x}) -> xs: List {a | p _v} -> {List a | _v != xs}
    ))
filter = \pred. \xs.
  match xs with
    Nil -> Nil
    Cons y ys -> if pred y
      then Cons y (filter pred ys)
      else (filter pred ys)