data Nat where
  Z :: Nat
  S :: Nat -> Nat

termination measure dec :: Nat -> {Int | _v >= 0} where
  Z -> 0
  S m -> 1 + dec m

data List a where
	Nil :: List a
	Cons :: x: a -> xs: List a -> List a

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs

data Maybe a where
  Nothing :: Maybe a
  Just :: a -> Maybe a


{-
Checks, with top 3, not the last one.
-}
-- list_last_intersect :: (xs:List Nat -> Maybe Nat) ^
--   (xs:{List Nat| len _v == 0} -> {Maybe Nat | _v == Nothing}) ^
--   (xs:{List {Nat | _v == Z} | len _v > 0} -> {Maybe Nat | _v == Just Z}) ^
--   -- This last refinement causes it to fail
--   (xs:{List Nat | _v == (Cons Z (Cons (S Z) (Cons (S (S Z)) Nil)))} -> {Maybe Nat | _v == Just (S (S Z))})
-- list_last_intersect = \xs .
--   match xs with
--     Nil -> Nothing
--     Cons x3 x4 ->
--       match x4 with
--         Nil -> Just x3
--         Cons x8 x9 -> list_last_intersect x4

list_last_intersect :: (xs:List Int -> Maybe Int) ^
  (xs:{List Int| len _v == 0} -> {Maybe Int | _v == Nothing}) ^
  (xs:{List {Int | _v == 1} | len _v > 0} -> {Maybe Int | _v == Just 1}) ^
  -- This last refinement causes it to fail
  (xs:{List Int | _v == (Cons 1 (Cons 2 (Cons 3 Nil)))} -> {Maybe Int | _v == Just 3})
list_last_intersect = \xs .
  match xs with
    Nil -> Nothing
    Cons x3 x4 ->
      match x4 with
        Nil -> Just x3
        Cons x8 x9 -> list_last_intersect x4

{-
Checks
-}
-- list_last_conj :: xs:List Nat -> { Maybe Nat |
--    (xs == Nil ==> _v == Nothing) &&
--    (xs == (Cons (S Z) Nil) ==> _v == (Just (S Z))) &&
--    (xs == (Cons (S (S Z)) Nil) ==> _v == (Just (S (S Z)))) &&
--    (xs == (Cons (S (S Z)) (Cons (S Z) Nil)) ==> _v == (Just (S Z))) &&
--    (xs == (Cons (S Z) (Cons (S (S Z)) Nil)) ==> _v == (Just (S (S Z)))) &&
--    (xs == (Cons (S (S (S Z))) (Cons (S (S Z)) (Cons (S Z) Nil))) ==> _v == (Just (S Z))) &&
--    True
-- }
-- list_last_conj = \xs .
--   match xs with
--     Nil -> Nothing
--     Cons x3 x4 ->
--       match x4 with
--         Nil -> Just x3
--         Cons x8 x9 -> list_last_conj x4